#!/usr/bin/env bash
#
# Copyright (C) 2025 Salvo Giangreco
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# [
source "$SRC_DIR/scripts/utils/common_utils.sh" || exit 1

trap '[ $? -ne 0 ] && rm -f "$OUT_DIR/config.sh"' EXIT

GET_BUILD_VAR()
{
    if [ "$2" ]; then
        if [ ! "${!1}" ]; then
            echo "${1}=\"${2}\""
            return 0
        fi
    else
        _CHECK_NON_EMPTY_PARAM "$1" "${!1}" || exit 1
    fi

    echo "${1}=\"${!1}\""
    return 0
}

IS_EXTREMEROM_CERT_AVAILABLE()
{
    local USES_EXTREMEROM_CERT="false"
    [ -s "$SRC_DIR/security/extremerom_platform.pk8" ] && USES_EXTREMEROM_CERT="true"
    echo "$USES_EXTREMEROM_CERT"
}
# ]

if [ $# -ne 1 ]; then
    echo "Usage: gen_config_file <target>" >&2
    exit 1
elif [ ! -f "$SRC_DIR/target/$1/config.sh" ]; then
    LOGE "File not found: target/$1/config.sh"
    exit 1
else
    source "$SRC_DIR/unica/configs/version.sh" || exit 1
    source "$SRC_DIR/target/$1/config.sh" || exit 1
fi

if [ ! -f "$SRC_DIR/unica/configs/$TARGET_SINGLE_SYSTEM_IMAGE.sh" ]; then
    LOGE "\"$TARGET_SINGLE_SYSTEM_IMAGE\" is not a valid system image"
    exit 1
else
    source "$SRC_DIR/unica/configs/$TARGET_SINGLE_SYSTEM_IMAGE.sh" || exit 1
fi

if [ -f "$OUT_DIR/config.sh" ]; then
    LOGW "config.sh already exists. Regenerating"
    rm -f "$OUT_DIR/config.sh"
fi

{
    echo "# Automatically generated by scripts/internal/gen_config_file.sh"
    echo "ROM_IS_OFFICIAL=\"$(IS_EXTREMEROM_CERT_AVAILABLE)\""
    GET_BUILD_VAR "ROM_VERSION"
    GET_BUILD_VAR "ROM_CODENAME"
    GET_BUILD_VAR "ROM_BUILD_TIMESTAMP" "$(date +%s)"
    GET_BUILD_VAR "SOURCE_FIRMWARE"
    if [ "${#SOURCE_EXTRA_FIRMWARES[@]}" -ge 1 ]; then
        echo "SOURCE_EXTRA_FIRMWARES=\"$(IFS=":"; printf '%s' "${SOURCE_EXTRA_FIRMWARES[*]}")\""
    else
        echo "SOURCE_EXTRA_FIRMWARES=\"\""
    fi
    GET_BUILD_VAR "SOURCE_API_LEVEL"
    GET_BUILD_VAR "SOURCE_PRODUCT_FIRST_API_LEVEL"
    GET_BUILD_VAR "SOURCE_VNDK_VERSION"
    GET_BUILD_VAR "TARGET_NAME"
    GET_BUILD_VAR "SOURCE_CODENAME"
    GET_BUILD_VAR "TARGET_CODENAME"
    GET_BUILD_VAR "TARGET_PLATFORM"
    if [ "${#TARGET_ASSERT_MODEL[@]}" -ge 1 ]; then
        echo "TARGET_ASSERT_MODEL=\"$(IFS=":"; printf '%s' "${TARGET_ASSERT_MODEL[*]}")\""
    else
        echo "TARGET_ASSERT_MODEL=\"\""
    fi
    GET_BUILD_VAR "TARGET_FIRMWARE"
    if [ "${#TARGET_EXTRA_FIRMWARES[@]}" -ge 1 ]; then
        echo "TARGET_EXTRA_FIRMWARES=\"$(IFS=":"; printf '%s' "${TARGET_EXTRA_FIRMWARES[*]}")\""
    else
        echo "TARGET_EXTRA_FIRMWARES=\"\""
    fi
    GET_BUILD_VAR "TARGET_API_LEVEL"
    GET_BUILD_VAR "TARGET_PRODUCT_FIRST_API_LEVEL"
    GET_BUILD_VAR "TARGET_VNDK_VERSION"
    GET_BUILD_VAR "TARGET_SINGLE_SYSTEM_IMAGE"
    GET_BUILD_VAR "TARGET_OS_FILE_SYSTEM"
    GET_BUILD_VAR "TARGET_BOOT_DEVICE_PATH" "/dev/block/bootdevice/by-name"
    GET_BUILD_VAR "TARGET_INCLUDE_PATCHED_VBMETA" "false"
    GET_BUILD_VAR "TARGET_KEEP_ORIGINAL_SIGN" "false"
    GET_BUILD_VAR "TARGET_BOOT_PARTITION_SIZE" "none"
    GET_BUILD_VAR "TARGET_DTBO_PARTITION_SIZE" "none"
    GET_BUILD_VAR "TARGET_INIT_BOOT_PARTITION_SIZE" "none"
    GET_BUILD_VAR "TARGET_VENDOR_BOOT_PARTITION_SIZE" "none"
    GET_BUILD_VAR "TARGET_SUPER_PARTITION_SIZE"
    GET_BUILD_VAR "SOURCE_SUPER_GROUP_NAME"
    GET_BUILD_VAR "TARGET_SUPER_GROUP_NAME" "$SOURCE_SUPER_GROUP_NAME"
    GET_BUILD_VAR "TARGET_SUPER_GROUP_SIZE"
    GET_BUILD_VAR "SOURCE_HAS_SYSTEM_EXT"
    GET_BUILD_VAR "TARGET_HAS_SYSTEM_EXT"
    GET_BUILD_VAR "SOURCE_AUDIO_SUPPORT_ACH_RINGTONE"
    GET_BUILD_VAR "TARGET_AUDIO_SUPPORT_ACH_RINGTONE"
    GET_BUILD_VAR "SOURCE_AUDIO_SUPPORT_VIRTUAL_VIBRATION"
    GET_BUILD_VAR "TARGET_AUDIO_SUPPORT_VIRTUAL_VIBRATION"
    GET_BUILD_VAR "SOURCE_AUTO_BRIGHTNESS_TYPE"
    GET_BUILD_VAR "TARGET_AUTO_BRIGHTNESS_TYPE"
    GET_BUILD_VAR "SOURCE_DVFS_CONFIG_NAME"
    GET_BUILD_VAR "TARGET_DVFS_CONFIG_NAME"
    GET_BUILD_VAR "SOURCE_NFC_CHIP_VENDOR" "none"
    GET_BUILD_VAR "TARGET_NFC_CHIP_VENDOR" "none"
    GET_BUILD_VAR "SOURCE_FP_SENSOR_CONFIG"
    GET_BUILD_VAR "TARGET_FP_SENSOR_CONFIG"
    GET_BUILD_VAR "SOURCE_HAS_HW_MDNIE"
    GET_BUILD_VAR "TARGET_HAS_HW_MDNIE"
    GET_BUILD_VAR "SOURCE_HAS_MASS_CAMERA_APP"
    GET_BUILD_VAR "TARGET_HAS_MASS_CAMERA_APP"
    GET_BUILD_VAR "SOURCE_HAS_QHD_DISPLAY"
    GET_BUILD_VAR "TARGET_HAS_QHD_DISPLAY"
    GET_BUILD_VAR "SOURCE_HFR_MODE"
    GET_BUILD_VAR "TARGET_HFR_MODE"
    GET_BUILD_VAR "SOURCE_HFR_SUPPORTED_REFRESH_RATE" "none"
    GET_BUILD_VAR "TARGET_HFR_SUPPORTED_REFRESH_RATE" "none"
    GET_BUILD_VAR "SOURCE_HFR_DEFAULT_REFRESH_RATE" "none"
    GET_BUILD_VAR "TARGET_HFR_DEFAULT_REFRESH_RATE" "none"
    GET_BUILD_VAR "SOURCE_HFR_SEAMLESS_BRT" "none"
    GET_BUILD_VAR "TARGET_HFR_SEAMLESS_BRT" "none"
    GET_BUILD_VAR "SOURCE_HFR_SEAMLESS_LUX" "none"
    GET_BUILD_VAR "TARGET_HFR_SEAMLESS_LUX" "none"
    GET_BUILD_VAR "SOURCE_IS_ESIM_SUPPORTED"
    GET_BUILD_VAR "TARGET_IS_ESIM_SUPPORTED"
    GET_BUILD_VAR "SOURCE_MDNIE_SUPPORTED_MODES"
    GET_BUILD_VAR "TARGET_MDNIE_SUPPORTED_MODES"
    GET_BUILD_VAR "SOURCE_MDNIE_WEAKNESS_SOLUTION_FUNCTION"
    GET_BUILD_VAR "TARGET_MDNIE_WEAKNESS_SOLUTION_FUNCTION"
    GET_BUILD_VAR "SOURCE_MDNIE_SUPPORT_HDR_EFFECT" "$(test "$((SOURCE_MDNIE_SUPPORTED_MODES & 4))" != "0" && echo "true" || echo "false")"
    GET_BUILD_VAR "TARGET_MDNIE_SUPPORT_HDR_EFFECT" "$(test "$((TARGET_MDNIE_SUPPORTED_MODES & 4))" != "0" && echo "true" || echo "false")"
    GET_BUILD_VAR "SOURCE_DISPLAY_CUTOUT_TYPE" "none"
    GET_BUILD_VAR "TARGET_DISPLAY_CUTOUT_TYPE" "none"
    GET_BUILD_VAR "SOURCE_SUPPORT_WIFI_7" "false"
    GET_BUILD_VAR "TARGET_SUPPORT_WIFI_7" "false"
    GET_BUILD_VAR "SOURCE_SUPPORT_HOTSPOT_DUALAP" "false"
    GET_BUILD_VAR "TARGET_SUPPORT_HOTSPOT_DUALAP" "false"
    GET_BUILD_VAR "SOURCE_SUPPORT_HOTSPOT_WPA3" "false"
    GET_BUILD_VAR "TARGET_SUPPORT_HOTSPOT_WPA3" "false"
    GET_BUILD_VAR "SOURCE_SUPPORT_HOTSPOT_6GHZ" "false"
    GET_BUILD_VAR "TARGET_SUPPORT_HOTSPOT_6GHZ" "false"
    GET_BUILD_VAR "SOURCE_SUPPORT_HOTSPOT_WIFI_6" "false"
    GET_BUILD_VAR "TARGET_SUPPORT_HOTSPOT_WIFI_6" "false"
    GET_BUILD_VAR "SOURCE_SUPPORT_HOTSPOT_ENHANCED_OPEN" "false"
    GET_BUILD_VAR "TARGET_SUPPORT_HOTSPOT_ENHANCED_OPEN" "false"
} > "$OUT_DIR/config.sh"

exit 0
